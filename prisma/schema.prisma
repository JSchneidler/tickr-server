// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum OrderType {
  BUY
  SELL
}

enum AdminActionType {
  VIEW_USER_HOLDINGS
  BAN_USER
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  name  String

  balance Decimal @default(0)

  Holdings Holding[]
  Orders   Order[]

  role                 Role          @default(USER)
  AdminActionsTaken    AdminAction[] @relation("ActionsTaken")
  AdminActionsReceived AdminAction[] @relation("ActionsReceived")

  password_digest String
  api_keys        ApiKey[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ApiKey {
  id   Int    @id @default(autoincrement())
  name String

  token_digest String

  User   User @relation(fields: [userId], references: [id])
  userId Int

  createdAt DateTime  @default(now())
  revokedAt DateTime?
}

model Holding {
  id     Int     @id @default(autoincrement())
  symbol String
  shares Decimal
  price  Decimal

  User   User @relation(fields: [userId], references: [id])
  userId Int

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Order {
  id     Int     @id @default(autoincrement())
  symbol String
  shares Decimal
  price  Decimal

  User   User @relation(fields: [userId], references: [id])
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AdminAction {
  id     Int             @id @default(autoincrement())
  action AdminActionType

  User           User @relation("ActionsTaken", fields: [userId], references: [id])
  userId         Int
  AffectedUser   User @relation("ActionsReceived", fields: [affectedUserId], references: [id])
  affectedUserId Int

  createdAt DateTime @default(now())
}
